{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./library/mic-year.ts","webpack:///./utils/decode-helper.ts","webpack:///./index.ts","webpack:///./decode-mic.ts","webpack:///./library/index.ts","webpack:///./library/mic-areas.ts","webpack:///./library/mic-body-materials.ts","webpack:///./library/mic-groups.ts","webpack:///./library/mic-series.ts","webpack:///./utils/index.ts","webpack:///./utils/parse-str.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MicYear","string","length","DecodeHelper","getValues","scheme","parser","parserCount","parsed","raw","result","getResult","decoded","join","parse","library","decodedValue","push","mergeParsed","parsedOne","parsedTwo","_a","apply","_b","prettify","_this","this","keys","forEach","_prettifyPattern","decode_mic_1","decode_helper_1","form","document","querySelector","formInput","formResult","addEventListener","event","inputValue","target","decodeMic","innerText","library_1","utils_1","mic_year_1","tempScheme","toUpperCase","area","parseStr","MicAreas","getArea","sliceCount","slice","bodyMaterial","MicBodyMaterials","getBodyMaterial","series","val","MicSeries","getSeries","groups","parsedGroupName","MicGroupLetter","MicGroup","getGroup","year","parseInt","String","getYear","modification","getModification","__export","isHybrid","isSemiconductor","isSpecific","isBipolar","isCMON","_sliceFirstLetter","semiconductor","letters","_sliceNextLetters","is","Number","count"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export class MicYear {\r\n    static get(string: string) {\r\n        if (string.length > 2) {\r\n            return '84-';\r\n        } else {\r\n            return '84+';\r\n        }\r\n    }\r\n}\r\n","import { DecodedMicResult, ParsedResult, ParsedValue } from '../decode-mic';\r\nimport { LibraryType } from '../library';\r\n\r\ninterface DecodeValue {\r\n    parsed: string;\r\n    result: ParsedResult[];\r\n    raw: string[];\r\n}\r\n\r\nexport class DecodeHelper {\r\n    static getValues(scheme: string, parser: Function, parserCount?: number): DecodeValue {\r\n        return {\r\n            parsed: parser(scheme, parserCount),\r\n            raw: [],\r\n            result: []\r\n        }\r\n    }\r\n\r\n    static getResult(decoded: DecodeValue): ParsedValue | null {\r\n        return decoded.result.length ?\r\n            {\r\n                result: decoded.result,\r\n                raw: decoded.raw.join(', '),\r\n                parsed: decoded.parsed\r\n            } :\r\n            null;\r\n    }\r\n\r\n    static parse(parsed: DecodeValue, library: LibraryType | Function): DecodeValue {\r\n        if (parsed.parsed) {\r\n            let decodedValue;\r\n            if (typeof library === 'function') {\r\n                decodedValue = library(parsed.parsed);\r\n            } else {\r\n                decodedValue = library[parsed.parsed];\r\n            }\r\n\r\n            if (decodedValue) {\r\n                parsed.result.push({ key: parsed.parsed, result: decodedValue });\r\n                parsed.raw.push(decodedValue);\r\n            }\r\n        }\r\n\r\n        return parsed;\r\n    }\r\n\r\n    static mergeParsed(parsedOne: DecodeValue, parsedTwo: DecodeValue): DecodeValue {\r\n        parsedOne.raw.push(...parsedTwo.raw);\r\n        parsedOne.result.push(...parsedTwo.result);\r\n        parsedOne.parsed += ', ' + parsedTwo.parsed;\r\n\r\n        return parsedOne;\r\n    }\r\n\r\n    static prettify(decoded: DecodedMicResult): string {\r\n        let result = '';\r\n        Object.keys(decoded)\r\n            .forEach(key => {\r\n                result += this._prettifyPattern(decoded[key].raw, decoded[key].parsed)\r\n            });\r\n\r\n        return result;\r\n    }\r\n\r\n    private static _prettifyPattern(raw: string, parsed: string): string {\r\n        return `${parsed}: ${raw}\\n`\r\n    }\r\n}\r\n","import { decodeMic } from './decode-mic';\r\nimport { DecodeHelper } from './utils/decode-helper';\r\n\r\nconst form = document.querySelector('[form]');\r\nconst formInput = form.querySelector('[form-input]');\r\nconst formResult = form.querySelector('[form-result]') as any;\r\n\r\nformInput.addEventListener('input', calculateValue);\r\n\r\nfunction calculateValue(event: any) {\r\n    const inputValue = event.target.value;\r\n    const result = decodeMic(inputValue);\r\n    formResult.innerText = DecodeHelper.prettify(result);\r\n}\r\n\r\n\r\n","import { MicAreas, MicBodyMaterials, MicGroup, MicGroupLetter, MicSeries } from './library';\r\nimport { parseStr } from './utils';\r\nimport { DecodeHelper } from './utils/decode-helper';\r\nimport { MicYear } from './library/mic-year';\r\n\r\nexport interface ParsedResult {\r\n    key: string;\r\n    result: string;\r\n}\r\n\r\nexport interface ParsedValue {\r\n    raw: string;\r\n    parsed: string;\r\n    result: ParsedResult[];\r\n}\r\n\r\nexport interface DecodedMicResult {\r\n    area?: ParsedValue;\r\n    bodyMaterial?: ParsedValue;\r\n    series?: ParsedValue;\r\n    groups?: ParsedValue;\r\n    year?: ParsedValue;\r\n    modification?: ParsedValue;\r\n}\r\n\r\nexport function decodeMic(scheme: string): DecodedMicResult {\r\n    const result: DecodedMicResult = {};\r\n    let tempScheme = scheme.toUpperCase();\r\n\r\n    if (scheme.length > 5) {\r\n        const area = getArea(tempScheme);\r\n        if (area) {\r\n            result.area = area;\r\n            const sliceCount = area.parsed === 'Пусто' ?\r\n                0 : 1;\r\n            tempScheme = tempScheme.slice(sliceCount);\r\n        }\r\n    }\r\n\r\n    const bodyMaterial = getBodyMaterial(tempScheme);\r\n    if (bodyMaterial) {\r\n        result.bodyMaterial = bodyMaterial;\r\n        tempScheme = tempScheme.slice(bodyMaterial.parsed.length);\r\n    }\r\n\r\n    const series = getSeries(tempScheme);\r\n    if (series) {\r\n        result.series = series;\r\n        tempScheme = tempScheme.slice(series.parsed.length);\r\n    }\r\n\r\n    const groups = getGroup(tempScheme);\r\n    if (groups) {\r\n        result.groups = groups;\r\n        tempScheme = tempScheme.slice(2);\r\n    }\r\n\r\n    const year = getYear(tempScheme);\r\n    if (year) {\r\n        result.year = year;\r\n        tempScheme = tempScheme.slice(year.parsed.length);\r\n    }\r\n\r\n    const modification = getModification(tempScheme);\r\n    if (modification) {\r\n        result.modification = modification;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction getArea(scheme: string): ParsedValue | null {\r\n    let parsed = DecodeHelper.getValues(scheme, parseStr, 1);\r\n    if (!MicAreas[parsed.parsed]) parsed.parsed = 'Пусто';\r\n    DecodeHelper.parse(parsed, MicAreas);\r\n    return DecodeHelper.getResult(parsed);\r\n}\r\n\r\nfunction getBodyMaterial(scheme: string): ParsedValue | null {\r\n    let parsed = DecodeHelper.getValues(scheme, parseStr, 1);\r\n    DecodeHelper.parse(parsed, MicBodyMaterials);\r\n    return DecodeHelper.getResult(parsed);\r\n}\r\n\r\nfunction getSeries(scheme: string): ParsedValue | null {\r\n    let parsed = DecodeHelper.getValues(scheme, parseStr, 3);\r\n    DecodeHelper.parse(parsed, (val: any) => MicSeries.get(val));\r\n    return DecodeHelper.getResult(parsed);\r\n}\r\n\r\nfunction getGroup(scheme: string): ParsedValue | null {\r\n    let parsedGroupName = DecodeHelper.getValues(scheme, parseStr, 1);\r\n    let parsed = DecodeHelper.getValues(scheme, parseStr, 2);\r\n    DecodeHelper.parse(parsedGroupName, MicGroupLetter);\r\n    DecodeHelper.parse(parsed, MicGroup);\r\n    DecodeHelper.mergeParsed(parsedGroupName, parsed);\r\n    return DecodeHelper.getResult(parsedGroupName);\r\n}\r\n\r\nfunction getYear(scheme: string): ParsedValue | null {\r\n    let parsed = DecodeHelper.getValues(scheme, parseInt);\r\n    parsed.parsed = String(parsed.parsed || '');\r\n    DecodeHelper.parse(parsed, MicYear.get);\r\n    return DecodeHelper.getResult(parsed);\r\n}\r\n\r\nfunction getModification(scheme: string): ParsedValue | null {\r\n    let parsed = DecodeHelper.getValues(scheme, parseStr);\r\n    DecodeHelper.parse(parsed, (val: string) => val + ' модифікація');\r\n    return DecodeHelper.getResult(parsed);\r\n}\r\n","import { MicAreas } from './mic-areas';\r\nimport { MicBodyMaterials } from './mic-body-materials';\r\nimport { MicGroup, MicGroupLetter } from './mic-groups';\r\nimport { MicSeries } from './mic-series';\r\n\r\nexport * from './mic-areas';\r\nexport * from './mic-body-materials';\r\nexport * from './mic-groups';\r\nexport * from './mic-series';\r\nexport * from './mic-year';\r\n\r\nexport type LibraryType = MicAreas | MicBodyMaterials | MicGroup | MicGroupLetter | MicSeries;\r\n","export enum MicAreas {\r\n    К = 'Серійна',\r\n    Е = \"Експортна\",\r\n    Пусто = \"Внутрішня\"\r\n}\r\n","export enum MicBodyMaterials {\r\n    М = 'метало-керамічний',\r\n    Н = 'mini метало-керамічний',\r\n    Р = 'пластмасовий DIP',\r\n    А = 'mini пластмасовий DIP',\r\n    Ф = 'mini пластмасовий DIP (інша тех.)',\r\n    Б = 'безкорпусний',\r\n    Е = 'металополімерний DIP'\r\n}\r\n","export enum MicGroup {\r\n    АФ = 'спеціальна форма',\r\n    БМ = 'пасивний',\r\n    БП = 'інший',\r\n    БР = 'активний',\r\n    ВГ = 'контроллер',\r\n    ВЕ = \"мікро-ЕВН\",\r\n    ВЖ = 'спеціальний',\r\n    ВИ = 'часозадающий',\r\n    ВП = 'інший',\r\n    ГЛ = 'лінейних',\r\n    ГП = 'інших',\r\n    ГФ = 'спец. форми',\r\n    ЕП = 'джерело живлення',\r\n    ЕЧ = 'пристрій управління джерелами живлення',\r\n    ИЕ = 'лічильник',\r\n    ИП = 'інші',\r\n    КГ = 'комутатор або ключ струму',\r\n    КН = 'напруга',\r\n    КП = 'інших',\r\n    ЛА = 'і-не (штрих шефера)',\r\n    ЛБ = 'і-неабо-не (комплексні мсстрілка + штрих)',\r\n    ЛД = 'розширені',\r\n    ЛЕ = 'або-не (стрілка пірса)',\r\n    ЛИ = 'і (кон\\'юнктор)',\r\n    ЛК = 'і-або-неі-або (комплексні МС с полярними входамистрілка + штрих)',\r\n    ЛЛ = 'або (альт-або)',\r\n    ЛН = 'не (інвертор)',\r\n    ЛП = 'інші',\r\n    ЛР = 'і-або-не (комплексні МС і полярними входами)',\r\n    ЛС = 'і-або (комплексні МС)',\r\n    ЛІ = 'кон\\'юнктор',\r\n    НК = 'комбінований',\r\n    НТ = 'набір транзисторів',\r\n    ПА = 'ЦАП',\r\n    ПД = 'тривалості',\r\n    ПП = \"інший\",\r\n    ПС = 'частоти',\r\n    ПЦ = 'цифровий дільник частоти',\r\n    РП = 'інший',\r\n    РР = 'ПЗУ з перепрограмуванням',\r\n    ТВ = 'JK',\r\n    ТД = 'динамічний',\r\n    ТК = 'тригер комбінований',\r\n    ТЛ = 'тригер Шмітта',\r\n    ТМ = 'D',\r\n    ТП = 'специфічні тригери',\r\n    ТР = 'RS',\r\n    ТС = 'тригер Шмітта',\r\n    ТТ = 'T',\r\n    УД = 'операційний',\r\n    УИ = 'імпульсний',\r\n    УК = 'широкополосний',\r\n    УЛ = 'считувач і програвач',\r\n    УН = 'нізької частоти',\r\n    УП = 'інший',\r\n    УР = 'проміжної частоти',\r\n    ФП = 'фільтр',\r\n    ХА = 'аналоговий',\r\n    ХК = 'комбінований',\r\n    ХЛ = 'цифровий',\r\n    ХП = 'інший',\r\n}\r\n\r\nexport enum MicGroupLetter {\r\n    А = 'формувач',\r\n    Б = 'пристрій затримки',\r\n    В = 'обчислювальний пристрій',\r\n    Г = 'генератор сигналів',\r\n    Е = 'живлення',\r\n    И = 'цифровий пристрій',\r\n    К = 'коммутатори і ключі',\r\n    Н = 'набір елементів',\r\n    П = 'перетворювач сигналів',\r\n    Р = 'запам\\'ятовуючий пристрій',\r\n    У = 'підсилювач',\r\n    Ф = 'фільтр',\r\n    Х = 'багатофункціональний пристрій'\r\n}\r\n","type Series = number | string;\r\n\r\nexport class MicSeries {\r\n    static get(series: Series) {\r\n        let result = '';\r\n\r\n        if (this.isHybrid(series)) result += 'гібридна';\r\n        if (this.isSemiconductor(series)) result += 'напівпровідникова';\r\n        if (this.isSpecific(series)) result += 'специфічна';\r\n\r\n        if (this.isBipolar(series)) result += 'ТТЛ, біполярні';\r\n        else if (this.isCMON(series)) result += 'ТТЛ/КМОН';\r\n\r\n        return result;\r\n    }\r\n\r\n    static isHybrid(series: Series) {\r\n        return this._sliceFirstLetter(series) === 0;\r\n    }\r\n\r\n    static isSemiconductor(series: Series) {\r\n        const semiconductor = this._sliceFirstLetter(series);\r\n        return semiconductor === 1 ||\r\n            semiconductor === 3 ||\r\n            semiconductor === 7;\r\n    }\r\n\r\n    static isSpecific(series: Series) {\r\n        return this._sliceFirstLetter(series) === 3;\r\n    }\r\n\r\n    static isCMON(series: Series) {\r\n        return this._sliceFirstLetter(series) === 5;\r\n\r\n    }\r\n\r\n    static isBipolar(series: Series) {\r\n        const letters = this._sliceNextLetters(series);\r\n        return letters === 59 || letters === 33;\r\n\r\n    }\r\n\r\n    static is(series: Series) {\r\n        return Number(series);\r\n    }\r\n\r\n    private static _sliceFirstLetter(series: Series): number {\r\n        return +String(series).slice(0, 1);\r\n    }\r\n\r\n\r\n    private static _sliceNextLetters(series: Series): number {\r\n        return +String(series).slice(1);\r\n    }\r\n\r\n}\r\n","export * from './parse-str';\r\n","export function parseStr(string: string, count?: number): string {\r\n    if (count) {\r\n        return string.slice(0, count);\r\n    }\r\n\r\n    count = 0;\r\n    for (let i = 0, n = string.length; i < n; i++) {\r\n        if ( !+string[i] ) count++;\r\n        else break;\r\n    }\r\n    return string.slice(0, count);\r\n}\r\n"],"sourceRoot":""}